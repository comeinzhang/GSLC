package com.tyh.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.charset.Charset;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.tyh.unitl.FileBean;
import com.tyh.unitl.FileUtil;


/**
 * ueditor编辑器处理
 */
@Controller
@RequestMapping("/ueditorC")
public class UEditorController {
    
    /**
     * 编辑器上传图片
     * 
     * @param request
     * @param response
     * @throws IOException 
     */
    @RequestMapping(value = "/upload.req", method = {RequestMethod.POST})
    public String upload(HttpServletRequest request, HttpServletResponse response) throws IOException {
    	MultipartHttpServletRequest multipartRequest=(MultipartHttpServletRequest) request;   
        // 获得文件：  
        MultipartFile file =multipartRequest.getFile("upfile"); //UEditor传到后台的是这个upfile，其他的文件上传，应该也差不多是这个，还没去研究，断点一下就知道了
        try {
            FileBean fileBean = FileUtil.savePic(file.getBytes());
            PrintWriter out = null;
            out = response.getWriter();
            out.println(getError("SUCCESS", fileBean.getName(), fileBean.getHttpURL(), null, fileBean.getSuffix()));
        } catch (Exception e) {
            System.out.println("ueditor上传文件异常！");
        }
        return null;
    }
    
    private String getError(String state, String imgName, String url, String size, String type) {
        com.alibaba.fastjson.JSONObject obj = new com.alibaba.fastjson.JSONObject();
        obj.put("state", state);
        obj.put("originalName", imgName);
        obj.put("name", imgName);
        obj.put("url", url);
        obj.put("size", size);
        obj.put("type", type);
        return obj.toJSONString();
    }
    
    /**
     * 读取编辑器的config.json和分发UE的请求！
     * 
     * @param request
     * @param response
     */
    @RequestMapping(value = "/getUEConfig")
    public String getUEConfig(HttpServletRequest request, HttpServletResponse response, String action
        ) {
        try {
            response.setCharacterEncoding("utf-8");
            response.setHeader("Content-Type", "text/html");// UE的数据返回！要用这个Header
            if ("upload".equals(action)) {
                upload(request, response);
            } else {
                String rootPath = request.getSession().getServletContext().getRealPath("/static/plug-in/ueditor/config.json");
                File configFile = new File(rootPath);
                FileInputStream fi = new FileInputStream(configFile);
                FileChannel inChannel = fi.getChannel();// 得到对应的文件通道
                ByteBuffer byteBuffer = ByteBuffer.allocate(1024);
                StringBuffer configSb = new StringBuffer();
                Charset charset = Charset.defaultCharset();
                while (inChannel.read(byteBuffer) != -1) {
                    byteBuffer.flip();
                    configSb.append(charset.decode(byteBuffer).toString());
                    byteBuffer.clear();
                }
                inChannel.close();
                fi.close();
                JSONObject configJs = JSONObject.fromObject(configSb.toString());
                response.getWriter().write(configJs.toString());
                response.getWriter().flush();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }
    
}
