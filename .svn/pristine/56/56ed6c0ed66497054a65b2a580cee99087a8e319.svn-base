package com.tyh.unitl;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;



/**
 * @Description: TODO(这里用一句话描述这个类的作用)
 * @author ShineU
 * @date 2015年11月12日 下午5:29:26
 * @version 1.0
 */

public class NumberUtil {
    public static String fomaterFloat(Float value) {
        DecimalFormat decimalFormat = new DecimalFormat("##0.0");
        String result = null;
        if (null == value) {
            return result;
        }
        result = decimalFormat.format(value.floatValue());
        return result;
    }
	   /*f:保留小数位数
	    d:double值
	    flag:是否四舍五入up/down
	  */
	  public static Double doubleFormat(int f, Double d ,String flag) {
	  	if (flag.equals("up")) {
				d = new BigDecimal(d).setScale(f,BigDecimal.ROUND_HALF_UP).doubleValue();
			}else if (flag.equals("down")) {
				d = new BigDecimal(d).setScale(f,BigDecimal.ROUND_DOWN).doubleValue();
			}
	      return d;
	  }
    
    public static int nextInt(final int min, final int max) {
        Random rand = new Random();
        int tmp = Math.abs(rand.nextInt());
        return tmp % (max - min + 1) + min;
    }
    static double DEF_PI = 3.14159265359; // PI
    static double DEF_2PI= 6.28318530712; // 2*PI
    static double DEF_PI180= 0.01745329252; // PI/180.0
    static double DEF_R =6370.6935; // radius of earth
    public static Double getLatLngDistance(Double lon1, Double lat1,Double lon2,Double lat2){
    	  //自己实现距离算法：
    	  /**
    	   * 计算两点之间距离
    	   * @param start
    	   * @param end
    	   * @return String  多少m ,  多少km
    	   */
	        // 角度转换为弧度
	    	double ew1 = lon1 * DEF_PI180;
	    	double ns1 = lat1 * DEF_PI180;
	    	double ew2 = lon2 * DEF_PI180;
	    	double ns2 = lat2 * DEF_PI180;
    	   
    	   //地球半径
    	   double R = 6371.004;
    	   //两点间距离 m，如果想要米的话，结果*1000就可以了
    	   double dis;
    	   dis = Math.sin(ns1)*Math.sin(ns2)+Math.cos(ns1)*Math.cos(ns2)*Math.cos(ew1-ew2);
    	   if (dis > 1.0)
    		   dis = 1.0;
    	   else if (dis < -1.0)
    		   dis = -1.0;
    	   dis =  Math.acos(dis)*R;
//    	   NumberFormat nFormat = NumberFormat.getNumberInstance();  //数字格式化对象
//    	   nFormat.setMaximumFractionDigits(2);
//    	   String ll = nFormat.format(dis);
    	   dis = doubleFormat(2, dis, "up");
   	       return dis;
//    	   if(dis < 1){               //当小于1千米的时候用,用米做单位保留一位小数
//    	    nFormat.setMaximumFractionDigits(1);    //已可以设置为0，这样跟百度地图APP中计算的一样 
//    	    dis *= 1000;
//    	    return nFormat.format(dis)+"m";
//    	   }else{
//    	    nFormat.setMaximumFractionDigits(2);
//    	    return nFormat.format(dis)+"km";
//    	   }
    	 }
    public static void main(String[] args) {
        double mLat1 = 29.490295; // point1纬度
        double mLon1 = 106.486654; // point1经度
        double mLat2 = 29.615467;// point2纬度
        double mLon2 = 106.581515;// point2经度
//        double distance = getLatLngDistance(mLon1, mLat1, mLon2, mLat2);
        Date nowTime = new Date(Long.parseLong("1523844552486"));
        SimpleDateFormat sdFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String retStrFormatNowDate = sdFormatter.format(nowTime);
        System.out.println(retStrFormatNowDate);
    }
}
